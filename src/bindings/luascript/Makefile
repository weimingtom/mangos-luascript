# Makefile.in generated by automake 1.9.6 from Makefile.am.
# src/bindings/universal/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



srcdir = .
top_srcdir = ../../..

pkgdatadir = $(datadir)/mangos
pkgincludedir = $(includedir)/mangos
top_builddir = ../../..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
subdir = src/bindings/universal
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)"
libLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(lib_LTLIBRARIES)
libMaNGOSScript_la_DEPENDENCIES = ./lua/lib/liblua.a \
	./lua/lib/liblualib.a
am_libMaNGOSScript_la_OBJECTS = LUA_Engine.lo LUA_Player.lo \
	Lua_Creature.lo Lua_Unit.lo Lua_exports.lo Lua_uint64.lo \
	ScriptMgr.lo sc_defines.lo system.lo class.lo class_info.lo \
	class_registry.lo class_rep.lo create_class.lo error.lo \
	find_best_match.lo function.lo implicit_cast.lo \
	link_compatibility.lo object_rep.lo open.lo overload_rep.lo \
	pcall.lo ref.lo scope.lo stack_content_by_name.lo weak_ref.lo \
	wrapper_base.lo
libMaNGOSScript_la_OBJECTS = $(am_libMaNGOSScript_la_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libMaNGOSScript_la_SOURCES)
DIST_SOURCES = $(libMaNGOSScript_la_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-exec-recursive install-info-recursive \
	install-recursive installcheck-recursive installdirs-recursive \
	pdf-recursive ps-recursive uninstall-info-recursive \
	uninstall-recursive
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
pkglibdir = $(libdir)
ACLOCAL = ${SHELL} /home/mangos/src/missing --run aclocal-1.9
ALLOCA = 
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/mangos/src/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /home/mangos/src/missing --run autoconf
AUTOHEADER = ${SHELL} /home/mangos/src/missing --run autoheader
AUTOMAKE = ${SHELL} /home/mangos/src/missing --run automake-1.9
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -DENABLE_CLI -O0 -ggdb -DMANGOS_DEBUG -DDEBUG -D_DEBUG -g -O2
COMPILER_OPTIONS =  -DENABLE_CLI -O0 -ggdb  -DMANGOS_DEBUG -DDEBUG -D_DEBUG -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -DENABLE_CLI -O0 -ggdb  -DMANGOS_DEBUG -DDEBUG -D_DEBUG -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
EXEEXT = 
EXTRA_COMPILER_OPTIONS = 
EXTRA_LINKER_OPTIONS = 
F77 = g77
FFLAGS = -g -O2
INCLUDES = -I/usr/include/mysql -I/usr/local/include/mysql  -I./../../../src/shared \
	-I./../../../src/framework -I./../../../dep/include -I./ \
	-I./lua/include -I./../../dep/include -I./lua/src \
	-I./../../../src/mangosd -I./../../../src/game
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = -L/usr/lib/mysql -L/usr/local/lib/mysql 
LIBOBJS = 
LIBS = -lssl -lmysqlclient_r -lz -lpthread 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LINKER_OPTIONS =  -L/usr/lib/mysql -L/usr/local/lib/mysql 
LN_S = ln -s
LTLIBOBJS = 
LTMS_AGE = 0
LTMS_CURRENT = 0
LTMS_RELEASE = 0.2.0
LTMS_REVISION = 2
LT_AGE = 2
LT_CURRENT = 2
LT_RELEASE = 2.3.2
LT_REVISION = 3
MAINT = #
MAINTAINER_MODE_FALSE = 
MAINTAINER_MODE_TRUE = #
MAKEINFO = ${SHELL} /home/mangos/src/missing --run makeinfo
MANGOSD_CONFIG = /home/mangos/etc/mangosd.conf
MANGOSD_CONFIGDIR = /home/mangos/etc
MANGOSD_DATA = /home/mangos/data/mangos
MANGOSD_ENABLE_CLI = yes
MANGOSD_ENABLE_RA = no
MYSQL_INCLUDES = -I/usr/include/mysql -I/usr/local/include/mysql
MYSQL_LDFLAGS = -L/usr/lib/mysql -L/usr/local/lib/mysql
OBJEXT = o
OPENSSL_INCLUDES = 
OPENSSL_LDFLAGS = 
PACKAGE = mangos
PACKAGE_BUGREPORT = http://www.mangosproject.org/
PACKAGE_NAME = MaNGOS
PACKAGE_STRING = MaNGOS 0.6-SVN
PACKAGE_TARNAME = mangos
PACKAGE_VERSION = 0.6-SVN
PATH_SEPARATOR = :
RANLIB = ranlib
REALMD_CONFIG = /home/mangos/etc/realmd.conf
REALMD_CONFIGDIR = /home/mangos/etc
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 0.6-SVN
WITH_APIDOCS = 0
WITH_APIDOCS_TARGET = 
WITH_PYTHON_SUBDIR = python
WITH_PYTHON_SUBPACKAGE = 1
WITH_PYTHON_VERSION = 2.4
__DOXYGEN = no
__PYTHON = /usr/bin/python
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = g77
ac_ct_RANLIB = ranlib
ac_ct_STRIP = strip
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
datadir = /home/mangos/data
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /home/mangos/src/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
mkdir_p = mkdir -p --
oldincludedir = /usr/include
prefix = /home/mangos
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = /home/mangos/etc
target_alias = 
AM_CXXFLAGS =  -DENABLE_CLI -O0 -ggdb  -DMANGOS_DEBUG -DDEBUG -D_DEBUG -g -O2 
SUBDIRS = lua
lib_LTLIBRARIES = libMaNGOSScript.la
libMaNGOSScript_la_LIBADD = ./lua/lib/liblua.a ./lua/lib/liblualib.a
libMaNGOSScript_la_LDFLAGS = -module -export-dynamic
libMaNGOSScript_la_SOURCES = \
LUA_Engine.cpp \
LUA_Player.cpp \
Lua_Creature.cpp \
Lua_Unit.cpp \
Lua_exports.cpp \
Lua_uint64.cpp \
ScriptMgr.cpp \
sc_defines.cpp \
system.cpp \
luabind/class.cpp \
luabind/class_info.cpp \
luabind/class_registry.cpp \
luabind/class_rep.cpp \
luabind/create_class.cpp \
luabind/error.cpp \
luabind/find_best_match.cpp \
luabind/function.cpp \
luabind/implicit_cast.cpp \
luabind/link_compatibility.cpp \
luabind/object_rep.cpp \
luabind/open.cpp \
luabind/overload_rep.cpp \
luabind/pcall.cpp \
luabind/ref.cpp \
luabind/scope.cpp \
luabind/stack_content_by_name.cpp \
luabind/weak_ref.cpp \
luabind/wrapper_base.cpp

all: all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/bindings/universal/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/bindings/universal/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(mkdir_p) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@set -x; list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  $(LIBTOOL) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libMaNGOSScript.la: $(libMaNGOSScript_la_OBJECTS) $(libMaNGOSScript_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(libdir) $(libMaNGOSScript_la_LDFLAGS) $(libMaNGOSScript_la_OBJECTS) $(libMaNGOSScript_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/LUA_Engine.Plo
include ./$(DEPDIR)/LUA_Player.Plo
include ./$(DEPDIR)/Lua_Creature.Plo
include ./$(DEPDIR)/Lua_Unit.Plo
include ./$(DEPDIR)/Lua_exports.Plo
include ./$(DEPDIR)/Lua_uint64.Plo
include ./$(DEPDIR)/ScriptMgr.Plo
include ./$(DEPDIR)/class.Plo
include ./$(DEPDIR)/class_info.Plo
include ./$(DEPDIR)/class_registry.Plo
include ./$(DEPDIR)/class_rep.Plo
include ./$(DEPDIR)/create_class.Plo
include ./$(DEPDIR)/error.Plo
include ./$(DEPDIR)/find_best_match.Plo
include ./$(DEPDIR)/function.Plo
include ./$(DEPDIR)/implicit_cast.Plo
include ./$(DEPDIR)/link_compatibility.Plo
include ./$(DEPDIR)/object_rep.Plo
include ./$(DEPDIR)/open.Plo
include ./$(DEPDIR)/overload_rep.Plo
include ./$(DEPDIR)/pcall.Plo
include ./$(DEPDIR)/ref.Plo
include ./$(DEPDIR)/sc_defines.Plo
include ./$(DEPDIR)/scope.Plo
include ./$(DEPDIR)/stack_content_by_name.Plo
include ./$(DEPDIR)/system.Plo
include ./$(DEPDIR)/weak_ref.Plo
include ./$(DEPDIR)/wrapper_base.Plo

.cpp.o:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

class.lo: luabind/class.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT class.lo -MD -MP -MF "$(DEPDIR)/class.Tpo" -c -o class.lo `test -f 'luabind/class.cpp' || echo '$(srcdir)/'`luabind/class.cpp; \
	then mv -f "$(DEPDIR)/class.Tpo" "$(DEPDIR)/class.Plo"; else rm -f "$(DEPDIR)/class.Tpo"; exit 1; fi
#	source='luabind/class.cpp' object='class.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o class.lo `test -f 'luabind/class.cpp' || echo '$(srcdir)/'`luabind/class.cpp

class_info.lo: luabind/class_info.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT class_info.lo -MD -MP -MF "$(DEPDIR)/class_info.Tpo" -c -o class_info.lo `test -f 'luabind/class_info.cpp' || echo '$(srcdir)/'`luabind/class_info.cpp; \
	then mv -f "$(DEPDIR)/class_info.Tpo" "$(DEPDIR)/class_info.Plo"; else rm -f "$(DEPDIR)/class_info.Tpo"; exit 1; fi
#	source='luabind/class_info.cpp' object='class_info.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o class_info.lo `test -f 'luabind/class_info.cpp' || echo '$(srcdir)/'`luabind/class_info.cpp

class_registry.lo: luabind/class_registry.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT class_registry.lo -MD -MP -MF "$(DEPDIR)/class_registry.Tpo" -c -o class_registry.lo `test -f 'luabind/class_registry.cpp' || echo '$(srcdir)/'`luabind/class_registry.cpp; \
	then mv -f "$(DEPDIR)/class_registry.Tpo" "$(DEPDIR)/class_registry.Plo"; else rm -f "$(DEPDIR)/class_registry.Tpo"; exit 1; fi
#	source='luabind/class_registry.cpp' object='class_registry.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o class_registry.lo `test -f 'luabind/class_registry.cpp' || echo '$(srcdir)/'`luabind/class_registry.cpp

class_rep.lo: luabind/class_rep.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT class_rep.lo -MD -MP -MF "$(DEPDIR)/class_rep.Tpo" -c -o class_rep.lo `test -f 'luabind/class_rep.cpp' || echo '$(srcdir)/'`luabind/class_rep.cpp; \
	then mv -f "$(DEPDIR)/class_rep.Tpo" "$(DEPDIR)/class_rep.Plo"; else rm -f "$(DEPDIR)/class_rep.Tpo"; exit 1; fi
#	source='luabind/class_rep.cpp' object='class_rep.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o class_rep.lo `test -f 'luabind/class_rep.cpp' || echo '$(srcdir)/'`luabind/class_rep.cpp

create_class.lo: luabind/create_class.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT create_class.lo -MD -MP -MF "$(DEPDIR)/create_class.Tpo" -c -o create_class.lo `test -f 'luabind/create_class.cpp' || echo '$(srcdir)/'`luabind/create_class.cpp; \
	then mv -f "$(DEPDIR)/create_class.Tpo" "$(DEPDIR)/create_class.Plo"; else rm -f "$(DEPDIR)/create_class.Tpo"; exit 1; fi
#	source='luabind/create_class.cpp' object='create_class.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o create_class.lo `test -f 'luabind/create_class.cpp' || echo '$(srcdir)/'`luabind/create_class.cpp

error.lo: luabind/error.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT error.lo -MD -MP -MF "$(DEPDIR)/error.Tpo" -c -o error.lo `test -f 'luabind/error.cpp' || echo '$(srcdir)/'`luabind/error.cpp; \
	then mv -f "$(DEPDIR)/error.Tpo" "$(DEPDIR)/error.Plo"; else rm -f "$(DEPDIR)/error.Tpo"; exit 1; fi
#	source='luabind/error.cpp' object='error.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o error.lo `test -f 'luabind/error.cpp' || echo '$(srcdir)/'`luabind/error.cpp

find_best_match.lo: luabind/find_best_match.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT find_best_match.lo -MD -MP -MF "$(DEPDIR)/find_best_match.Tpo" -c -o find_best_match.lo `test -f 'luabind/find_best_match.cpp' || echo '$(srcdir)/'`luabind/find_best_match.cpp; \
	then mv -f "$(DEPDIR)/find_best_match.Tpo" "$(DEPDIR)/find_best_match.Plo"; else rm -f "$(DEPDIR)/find_best_match.Tpo"; exit 1; fi
#	source='luabind/find_best_match.cpp' object='find_best_match.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o find_best_match.lo `test -f 'luabind/find_best_match.cpp' || echo '$(srcdir)/'`luabind/find_best_match.cpp

function.lo: luabind/function.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT function.lo -MD -MP -MF "$(DEPDIR)/function.Tpo" -c -o function.lo `test -f 'luabind/function.cpp' || echo '$(srcdir)/'`luabind/function.cpp; \
	then mv -f "$(DEPDIR)/function.Tpo" "$(DEPDIR)/function.Plo"; else rm -f "$(DEPDIR)/function.Tpo"; exit 1; fi
#	source='luabind/function.cpp' object='function.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o function.lo `test -f 'luabind/function.cpp' || echo '$(srcdir)/'`luabind/function.cpp

implicit_cast.lo: luabind/implicit_cast.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT implicit_cast.lo -MD -MP -MF "$(DEPDIR)/implicit_cast.Tpo" -c -o implicit_cast.lo `test -f 'luabind/implicit_cast.cpp' || echo '$(srcdir)/'`luabind/implicit_cast.cpp; \
	then mv -f "$(DEPDIR)/implicit_cast.Tpo" "$(DEPDIR)/implicit_cast.Plo"; else rm -f "$(DEPDIR)/implicit_cast.Tpo"; exit 1; fi
#	source='luabind/implicit_cast.cpp' object='implicit_cast.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o implicit_cast.lo `test -f 'luabind/implicit_cast.cpp' || echo '$(srcdir)/'`luabind/implicit_cast.cpp

link_compatibility.lo: luabind/link_compatibility.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT link_compatibility.lo -MD -MP -MF "$(DEPDIR)/link_compatibility.Tpo" -c -o link_compatibility.lo `test -f 'luabind/link_compatibility.cpp' || echo '$(srcdir)/'`luabind/link_compatibility.cpp; \
	then mv -f "$(DEPDIR)/link_compatibility.Tpo" "$(DEPDIR)/link_compatibility.Plo"; else rm -f "$(DEPDIR)/link_compatibility.Tpo"; exit 1; fi
#	source='luabind/link_compatibility.cpp' object='link_compatibility.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o link_compatibility.lo `test -f 'luabind/link_compatibility.cpp' || echo '$(srcdir)/'`luabind/link_compatibility.cpp

object_rep.lo: luabind/object_rep.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT object_rep.lo -MD -MP -MF "$(DEPDIR)/object_rep.Tpo" -c -o object_rep.lo `test -f 'luabind/object_rep.cpp' || echo '$(srcdir)/'`luabind/object_rep.cpp; \
	then mv -f "$(DEPDIR)/object_rep.Tpo" "$(DEPDIR)/object_rep.Plo"; else rm -f "$(DEPDIR)/object_rep.Tpo"; exit 1; fi
#	source='luabind/object_rep.cpp' object='object_rep.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o object_rep.lo `test -f 'luabind/object_rep.cpp' || echo '$(srcdir)/'`luabind/object_rep.cpp

open.lo: luabind/open.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT open.lo -MD -MP -MF "$(DEPDIR)/open.Tpo" -c -o open.lo `test -f 'luabind/open.cpp' || echo '$(srcdir)/'`luabind/open.cpp; \
	then mv -f "$(DEPDIR)/open.Tpo" "$(DEPDIR)/open.Plo"; else rm -f "$(DEPDIR)/open.Tpo"; exit 1; fi
#	source='luabind/open.cpp' object='open.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o open.lo `test -f 'luabind/open.cpp' || echo '$(srcdir)/'`luabind/open.cpp

overload_rep.lo: luabind/overload_rep.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT overload_rep.lo -MD -MP -MF "$(DEPDIR)/overload_rep.Tpo" -c -o overload_rep.lo `test -f 'luabind/overload_rep.cpp' || echo '$(srcdir)/'`luabind/overload_rep.cpp; \
	then mv -f "$(DEPDIR)/overload_rep.Tpo" "$(DEPDIR)/overload_rep.Plo"; else rm -f "$(DEPDIR)/overload_rep.Tpo"; exit 1; fi
#	source='luabind/overload_rep.cpp' object='overload_rep.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o overload_rep.lo `test -f 'luabind/overload_rep.cpp' || echo '$(srcdir)/'`luabind/overload_rep.cpp

pcall.lo: luabind/pcall.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pcall.lo -MD -MP -MF "$(DEPDIR)/pcall.Tpo" -c -o pcall.lo `test -f 'luabind/pcall.cpp' || echo '$(srcdir)/'`luabind/pcall.cpp; \
	then mv -f "$(DEPDIR)/pcall.Tpo" "$(DEPDIR)/pcall.Plo"; else rm -f "$(DEPDIR)/pcall.Tpo"; exit 1; fi
#	source='luabind/pcall.cpp' object='pcall.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pcall.lo `test -f 'luabind/pcall.cpp' || echo '$(srcdir)/'`luabind/pcall.cpp

ref.lo: luabind/ref.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ref.lo -MD -MP -MF "$(DEPDIR)/ref.Tpo" -c -o ref.lo `test -f 'luabind/ref.cpp' || echo '$(srcdir)/'`luabind/ref.cpp; \
	then mv -f "$(DEPDIR)/ref.Tpo" "$(DEPDIR)/ref.Plo"; else rm -f "$(DEPDIR)/ref.Tpo"; exit 1; fi
#	source='luabind/ref.cpp' object='ref.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ref.lo `test -f 'luabind/ref.cpp' || echo '$(srcdir)/'`luabind/ref.cpp

scope.lo: luabind/scope.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scope.lo -MD -MP -MF "$(DEPDIR)/scope.Tpo" -c -o scope.lo `test -f 'luabind/scope.cpp' || echo '$(srcdir)/'`luabind/scope.cpp; \
	then mv -f "$(DEPDIR)/scope.Tpo" "$(DEPDIR)/scope.Plo"; else rm -f "$(DEPDIR)/scope.Tpo"; exit 1; fi
#	source='luabind/scope.cpp' object='scope.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scope.lo `test -f 'luabind/scope.cpp' || echo '$(srcdir)/'`luabind/scope.cpp

stack_content_by_name.lo: luabind/stack_content_by_name.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT stack_content_by_name.lo -MD -MP -MF "$(DEPDIR)/stack_content_by_name.Tpo" -c -o stack_content_by_name.lo `test -f 'luabind/stack_content_by_name.cpp' || echo '$(srcdir)/'`luabind/stack_content_by_name.cpp; \
	then mv -f "$(DEPDIR)/stack_content_by_name.Tpo" "$(DEPDIR)/stack_content_by_name.Plo"; else rm -f "$(DEPDIR)/stack_content_by_name.Tpo"; exit 1; fi
#	source='luabind/stack_content_by_name.cpp' object='stack_content_by_name.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o stack_content_by_name.lo `test -f 'luabind/stack_content_by_name.cpp' || echo '$(srcdir)/'`luabind/stack_content_by_name.cpp

weak_ref.lo: luabind/weak_ref.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT weak_ref.lo -MD -MP -MF "$(DEPDIR)/weak_ref.Tpo" -c -o weak_ref.lo `test -f 'luabind/weak_ref.cpp' || echo '$(srcdir)/'`luabind/weak_ref.cpp; \
	then mv -f "$(DEPDIR)/weak_ref.Tpo" "$(DEPDIR)/weak_ref.Plo"; else rm -f "$(DEPDIR)/weak_ref.Tpo"; exit 1; fi
#	source='luabind/weak_ref.cpp' object='weak_ref.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o weak_ref.lo `test -f 'luabind/weak_ref.cpp' || echo '$(srcdir)/'`luabind/weak_ref.cpp

wrapper_base.lo: luabind/wrapper_base.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wrapper_base.lo -MD -MP -MF "$(DEPDIR)/wrapper_base.Tpo" -c -o wrapper_base.lo `test -f 'luabind/wrapper_base.cpp' || echo '$(srcdir)/'`luabind/wrapper_base.cpp; \
	then mv -f "$(DEPDIR)/wrapper_base.Tpo" "$(DEPDIR)/wrapper_base.Plo"; else rm -f "$(DEPDIR)/wrapper_base.Tpo"; exit 1; fi
#	source='luabind/wrapper_base.cpp' object='wrapper_base.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wrapper_base.lo `test -f 'luabind/wrapper_base.cpp' || echo '$(srcdir)/'`luabind/wrapper_base.cpp

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(mkdir_p) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(LTLIBRARIES)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(libdir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am:

install-exec-am: install-libLTLIBRARIES

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-info-am uninstall-libLTLIBRARIES

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am check check-am \
	clean clean-generic clean-libLTLIBRARIES clean-libtool \
	clean-recursive ctags ctags-recursive distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-recursive distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-exec install-exec-am install-info \
	install-info-am install-libLTLIBRARIES install-man \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	maintainer-clean-recursive mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool mostlyclean-recursive \
	pdf pdf-am ps ps-am tags tags-recursive uninstall uninstall-am \
	uninstall-info-am uninstall-libLTLIBRARIES

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
