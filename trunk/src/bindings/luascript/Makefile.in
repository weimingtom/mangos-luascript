# Makefile.in generated by automake 1.9.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ../../..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
subdir = src/bindings/universal
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)"
libLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(lib_LTLIBRARIES)
libMaNGOSScript_la_DEPENDENCIES = ./lua/lib/liblua.a \
	./lua/lib/liblualib.a
am_libMaNGOSScript_la_OBJECTS = CppScripts.lo CppScriptMgr.lo \
	LUA_Engine.lo LUA_Player.lo Lua_Creature.lo Lua_Unit.lo \
	Lua_exports.lo Lua_uint64.lo ScriptMgr.lo sc_defines.lo \
	system.lo Lua_AI.lo class.lo class_info.lo class_registry.lo \
	class_rep.lo create_class.lo error.lo find_best_match.lo \
	function.lo implicit_cast.lo link_compatibility.lo \
	object_rep.lo open.lo overload_rep.lo pcall.lo ref.lo scope.lo \
	stack_content_by_name.lo weak_ref.lo wrapper_base.lo \
	sc_marshal_mcbride.lo sc_silas_darkmoon.lo \
	sc_skorn_whitecloud.lo sc_guard_bluffwatcher.lo \
	sc_guard_darnassus.lo sc_guard_dunmorogh.lo \
	sc_guard_durotar.lo sc_guard_elwynnforest.lo \
	sc_guard_ironforge.lo sc_guard_mulgore.lo \
	sc_guard_orgrimmar.lo sc_guard_stormwind.lo \
	sc_guard_teldrassil.lo sc_guard_tirisfal.lo \
	sc_guard_undercity.lo sc_alliance_commander.lo \
	sc_alliance_corporal.lo sc_alliance_field_marshal.lo \
	sc_alliance_grand_marshal.lo sc_alliance_knight-captain.lo \
	sc_alliance_knight-lieutenant.lo sc_alliance_knight.lo \
	sc_alliance_knight_champion.lo \
	sc_alliance_lieutenant_commander.lo sc_alliance_marshal.lo \
	sc_alliance_master_sergeant.lo sc_alliance_private.lo \
	sc_alliance_sergeant.lo sc_alliance_sergeant_major.lo \
	sc_horde_blood_guard.lo sc_horde_centurion.lo \
	sc_horde_champion.lo sc_horde_first_sergeant.lo \
	sc_horde_general.lo sc_horde_grunt.lo sc_horde_high_warlord.lo \
	sc_horde_legionaire.lo sc_horde_lieutenant_general.lo \
	sc_horde_scout.lo sc_horde_senior_sergeant.lo \
	sc_horde_sergeant.lo sc_horde_stone_guard.lo \
	sc_horde_warlord.lo sc_battlemaster.lo sc_guildmaster.lo \
	sc_travelmaster.lo
libMaNGOSScript_la_OBJECTS = $(am_libMaNGOSScript_la_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libMaNGOSScript_la_SOURCES)
DIST_SOURCES = $(libMaNGOSScript_la_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-exec-recursive install-info-recursive \
	install-recursive installcheck-recursive installdirs-recursive \
	pdf-recursive ps-recursive uninstall-info-recursive \
	uninstall-recursive
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
pkglibdir = $(libdir)
ACLOCAL = @ACLOCAL@
ALLOCA = @ALLOCA@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
COMPILER_OPTIONS = @COMPILER_OPTIONS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
EXTRA_COMPILER_OPTIONS = @EXTRA_COMPILER_OPTIONS@
EXTRA_LINKER_OPTIONS = @EXTRA_LINKER_OPTIONS@
F77 = @F77@
FFLAGS = @FFLAGS@
INCLUDES = @INCLUDES@ -I./../../../src/shared \
	-I./../../../src/framework -I./../../../dep/include -I./ \
	-I./lua/include -I./../../dep/include -I./lua/src \
	-I./cpp-scripts -I./../../../src/mangosd -I./../../../src/game
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LINKER_OPTIONS = @LINKER_OPTIONS@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LTMS_AGE = @LTMS_AGE@
LTMS_CURRENT = @LTMS_CURRENT@
LTMS_RELEASE = @LTMS_RELEASE@
LTMS_REVISION = @LTMS_REVISION@
LT_AGE = @LT_AGE@
LT_CURRENT = @LT_CURRENT@
LT_RELEASE = @LT_RELEASE@
LT_REVISION = @LT_REVISION@
MAINT = @MAINT@
MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@
MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@
MAKEINFO = @MAKEINFO@
MANGOSD_CONFIG = @MANGOSD_CONFIG@
MANGOSD_CONFIGDIR = @MANGOSD_CONFIGDIR@
MANGOSD_DATA = @MANGOSD_DATA@
MANGOSD_ENABLE_CLI = @MANGOSD_ENABLE_CLI@
MANGOSD_ENABLE_RA = @MANGOSD_ENABLE_RA@
MYSQL_INCLUDES = @MYSQL_INCLUDES@
MYSQL_LDFLAGS = @MYSQL_LDFLAGS@
OBJEXT = @OBJEXT@
OPENSSL_INCLUDES = @OPENSSL_INCLUDES@
OPENSSL_LDFLAGS = @OPENSSL_LDFLAGS@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
REALMD_CONFIG = @REALMD_CONFIG@
REALMD_CONFIGDIR = @REALMD_CONFIGDIR@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
WITH_APIDOCS = @WITH_APIDOCS@
WITH_APIDOCS_TARGET = @WITH_APIDOCS_TARGET@
WITH_PYTHON_SUBDIR = @WITH_PYTHON_SUBDIR@
WITH_PYTHON_SUBPACKAGE = @WITH_PYTHON_SUBPACKAGE@
WITH_PYTHON_VERSION = @WITH_PYTHON_VERSION@
__DOXYGEN = @__DOXYGEN@
__PYTHON = @__PYTHON@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
prefix = @prefix@
program_transform_name = @program_transform_name@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
AM_CXXFLAGS = @COMPILER_OPTIONS@ @EXTRA_COMPILER_OPTIONS@
SUBDIRS = lua
lib_LTLIBRARIES = libMaNGOSScript.la
libMaNGOSScript_la_LIBADD = ./lua/lib/liblua.a ./lua/lib/liblualib.a
libMaNGOSScript_la_LDFLAGS = -export-dynamic
libMaNGOSScript_la_SOURCES = \
CppScriptMgr.h \
LUA_Engine.h \
LUA_Player.h \
Lua_AI.h \
Lua_Creature.h \
Lua_Unit.h \
Lua_exports.h \
Lua_uint64.h \
ScriptMgr.h \
config.h \
lua_defines.h \
luainc.h \
sc_defines.h \
cpp-scripts/CppScripts.cpp \
CppScriptMgr.cpp \
LUA_Engine.cpp \
LUA_Player.cpp \
Lua_Creature.cpp \
Lua_Unit.cpp \
Lua_exports.cpp \
Lua_uint64.cpp \
ScriptMgr.cpp \
sc_defines.cpp \
system.cpp \
Lua_AI.cpp \
luabind/class.cpp \
luabind/class_info.cpp \
luabind/class_registry.cpp \
luabind/class_rep.cpp \
luabind/create_class.cpp \
luabind/error.cpp \
luabind/find_best_match.cpp \
luabind/function.cpp \
luabind/implicit_cast.cpp \
luabind/link_compatibility.cpp \
luabind/object_rep.cpp \
luabind/open.cpp \
luabind/overload_rep.cpp \
luabind/pcall.cpp \
luabind/ref.cpp \
luabind/scope.cpp \
luabind/stack_content_by_name.cpp \
luabind/weak_ref.cpp \
luabind/wrapper_base.cpp \
cpp-scripts/custom/sc_marshal_mcbride.cpp \
cpp-scripts/custom/sc_silas_darkmoon.cpp \
cpp-scripts/custom/sc_skorn_whitecloud.cpp \
cpp-scripts/guards/sc_guard_bluffwatcher.cpp \
cpp-scripts/guards/sc_guard_darnassus.cpp \
cpp-scripts/guards/sc_guard_dunmorogh.cpp \
cpp-scripts/guards/sc_guard_durotar.cpp \
cpp-scripts/guards/sc_guard_elwynnforest.cpp \
cpp-scripts/guards/sc_guard_ironforge.cpp \
cpp-scripts/guards/sc_guard_mulgore.cpp \
cpp-scripts/guards/sc_guard_orgrimmar.cpp \
cpp-scripts/guards/sc_guard_stormwind.cpp \
cpp-scripts/guards/sc_guard_teldrassil.cpp \
cpp-scripts/guards/sc_guard_tirisfal.cpp \
cpp-scripts/guards/sc_guard_undercity.cpp \
cpp-scripts/honor/alliance/sc_alliance_commander.cpp \
cpp-scripts/honor/alliance/sc_alliance_corporal.cpp \
cpp-scripts/honor/alliance/sc_alliance_field_marshal.cpp \
cpp-scripts/honor/alliance/sc_alliance_grand_marshal.cpp \
cpp-scripts/honor/alliance/sc_alliance_knight-captain.cpp \
cpp-scripts/honor/alliance/sc_alliance_knight-lieutenant.cpp \
cpp-scripts/honor/alliance/sc_alliance_knight.cpp \
cpp-scripts/honor/alliance/sc_alliance_knight_champion.cpp \
cpp-scripts/honor/alliance/sc_alliance_lieutenant_commander.cpp \
cpp-scripts/honor/alliance/sc_alliance_marshal.cpp \
cpp-scripts/honor/alliance/sc_alliance_master_sergeant.cpp \
cpp-scripts/honor/alliance/sc_alliance_private.cpp \
cpp-scripts/honor/alliance/sc_alliance_sergeant.cpp \
cpp-scripts/honor/alliance/sc_alliance_sergeant_major.cpp \
cpp-scripts/honor/horde/sc_horde_blood_guard.cpp \
cpp-scripts/honor/horde/sc_horde_centurion.cpp \
cpp-scripts/honor/horde/sc_horde_champion.cpp \
cpp-scripts/honor/horde/sc_horde_first_sergeant.cpp \
cpp-scripts/honor/horde/sc_horde_general.cpp \
cpp-scripts/honor/horde/sc_horde_grunt.cpp \
cpp-scripts/honor/horde/sc_horde_high_warlord.cpp \
cpp-scripts/honor/horde/sc_horde_legionaire.cpp \
cpp-scripts/honor/horde/sc_horde_lieutenant_general.cpp \
cpp-scripts/honor/horde/sc_horde_scout.cpp \
cpp-scripts/honor/horde/sc_horde_senior_sergeant.cpp \
cpp-scripts/honor/horde/sc_horde_sergeant.cpp \
cpp-scripts/honor/horde/sc_horde_stone_guard.cpp \
cpp-scripts/honor/horde/sc_horde_warlord.cpp \
cpp-scripts/serveus/sc_battlemaster.cpp \
cpp-scripts/serveus/sc_guildmaster.cpp \
cpp-scripts/serveus/sc_travelmaster.cpp 

all: all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/bindings/universal/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/bindings/universal/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(mkdir_p) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@set -x; list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  $(LIBTOOL) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libMaNGOSScript.la: $(libMaNGOSScript_la_OBJECTS) $(libMaNGOSScript_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(libdir) $(libMaNGOSScript_la_LDFLAGS) $(libMaNGOSScript_la_OBJECTS) $(libMaNGOSScript_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CppScriptMgr.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CppScripts.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LUA_Engine.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LUA_Player.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Lua_AI.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Lua_Creature.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Lua_Unit.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Lua_exports.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Lua_uint64.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ScriptMgr.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/class.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/class_info.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/class_registry.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/class_rep.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/create_class.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/error.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/find_best_match.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/function.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/implicit_cast.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/link_compatibility.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/object_rep.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/open.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/overload_rep.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pcall.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ref.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sc_alliance_commander.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sc_alliance_corporal.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sc_alliance_field_marshal.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sc_alliance_grand_marshal.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sc_alliance_knight-captain.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sc_alliance_knight-lieutenant.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sc_alliance_knight.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sc_alliance_knight_champion.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sc_alliance_lieutenant_commander.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sc_alliance_marshal.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sc_alliance_master_sergeant.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sc_alliance_private.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sc_alliance_sergeant.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sc_alliance_sergeant_major.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sc_battlemaster.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sc_defines.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sc_guard_bluffwatcher.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sc_guard_darnassus.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sc_guard_dunmorogh.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sc_guard_durotar.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sc_guard_elwynnforest.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sc_guard_ironforge.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sc_guard_mulgore.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sc_guard_orgrimmar.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sc_guard_stormwind.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sc_guard_teldrassil.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sc_guard_tirisfal.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sc_guard_undercity.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sc_guildmaster.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sc_horde_blood_guard.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sc_horde_centurion.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sc_horde_champion.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sc_horde_first_sergeant.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sc_horde_general.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sc_horde_grunt.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sc_horde_high_warlord.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sc_horde_legionaire.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sc_horde_lieutenant_general.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sc_horde_scout.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sc_horde_senior_sergeant.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sc_horde_sergeant.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sc_horde_stone_guard.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sc_horde_warlord.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sc_marshal_mcbride.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sc_silas_darkmoon.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sc_skorn_whitecloud.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sc_travelmaster.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/scope.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stack_content_by_name.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/system.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/weak_ref.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wrapper_base.Plo@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

CppScripts.lo: cpp-scripts/CppScripts.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CppScripts.lo -MD -MP -MF "$(DEPDIR)/CppScripts.Tpo" -c -o CppScripts.lo `test -f 'cpp-scripts/CppScripts.cpp' || echo '$(srcdir)/'`cpp-scripts/CppScripts.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/CppScripts.Tpo" "$(DEPDIR)/CppScripts.Plo"; else rm -f "$(DEPDIR)/CppScripts.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cpp-scripts/CppScripts.cpp' object='CppScripts.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CppScripts.lo `test -f 'cpp-scripts/CppScripts.cpp' || echo '$(srcdir)/'`cpp-scripts/CppScripts.cpp

class.lo: luabind/class.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT class.lo -MD -MP -MF "$(DEPDIR)/class.Tpo" -c -o class.lo `test -f 'luabind/class.cpp' || echo '$(srcdir)/'`luabind/class.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/class.Tpo" "$(DEPDIR)/class.Plo"; else rm -f "$(DEPDIR)/class.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='luabind/class.cpp' object='class.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o class.lo `test -f 'luabind/class.cpp' || echo '$(srcdir)/'`luabind/class.cpp

class_info.lo: luabind/class_info.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT class_info.lo -MD -MP -MF "$(DEPDIR)/class_info.Tpo" -c -o class_info.lo `test -f 'luabind/class_info.cpp' || echo '$(srcdir)/'`luabind/class_info.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/class_info.Tpo" "$(DEPDIR)/class_info.Plo"; else rm -f "$(DEPDIR)/class_info.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='luabind/class_info.cpp' object='class_info.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o class_info.lo `test -f 'luabind/class_info.cpp' || echo '$(srcdir)/'`luabind/class_info.cpp

class_registry.lo: luabind/class_registry.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT class_registry.lo -MD -MP -MF "$(DEPDIR)/class_registry.Tpo" -c -o class_registry.lo `test -f 'luabind/class_registry.cpp' || echo '$(srcdir)/'`luabind/class_registry.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/class_registry.Tpo" "$(DEPDIR)/class_registry.Plo"; else rm -f "$(DEPDIR)/class_registry.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='luabind/class_registry.cpp' object='class_registry.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o class_registry.lo `test -f 'luabind/class_registry.cpp' || echo '$(srcdir)/'`luabind/class_registry.cpp

class_rep.lo: luabind/class_rep.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT class_rep.lo -MD -MP -MF "$(DEPDIR)/class_rep.Tpo" -c -o class_rep.lo `test -f 'luabind/class_rep.cpp' || echo '$(srcdir)/'`luabind/class_rep.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/class_rep.Tpo" "$(DEPDIR)/class_rep.Plo"; else rm -f "$(DEPDIR)/class_rep.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='luabind/class_rep.cpp' object='class_rep.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o class_rep.lo `test -f 'luabind/class_rep.cpp' || echo '$(srcdir)/'`luabind/class_rep.cpp

create_class.lo: luabind/create_class.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT create_class.lo -MD -MP -MF "$(DEPDIR)/create_class.Tpo" -c -o create_class.lo `test -f 'luabind/create_class.cpp' || echo '$(srcdir)/'`luabind/create_class.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/create_class.Tpo" "$(DEPDIR)/create_class.Plo"; else rm -f "$(DEPDIR)/create_class.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='luabind/create_class.cpp' object='create_class.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o create_class.lo `test -f 'luabind/create_class.cpp' || echo '$(srcdir)/'`luabind/create_class.cpp

error.lo: luabind/error.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT error.lo -MD -MP -MF "$(DEPDIR)/error.Tpo" -c -o error.lo `test -f 'luabind/error.cpp' || echo '$(srcdir)/'`luabind/error.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/error.Tpo" "$(DEPDIR)/error.Plo"; else rm -f "$(DEPDIR)/error.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='luabind/error.cpp' object='error.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o error.lo `test -f 'luabind/error.cpp' || echo '$(srcdir)/'`luabind/error.cpp

find_best_match.lo: luabind/find_best_match.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT find_best_match.lo -MD -MP -MF "$(DEPDIR)/find_best_match.Tpo" -c -o find_best_match.lo `test -f 'luabind/find_best_match.cpp' || echo '$(srcdir)/'`luabind/find_best_match.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/find_best_match.Tpo" "$(DEPDIR)/find_best_match.Plo"; else rm -f "$(DEPDIR)/find_best_match.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='luabind/find_best_match.cpp' object='find_best_match.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o find_best_match.lo `test -f 'luabind/find_best_match.cpp' || echo '$(srcdir)/'`luabind/find_best_match.cpp

function.lo: luabind/function.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT function.lo -MD -MP -MF "$(DEPDIR)/function.Tpo" -c -o function.lo `test -f 'luabind/function.cpp' || echo '$(srcdir)/'`luabind/function.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/function.Tpo" "$(DEPDIR)/function.Plo"; else rm -f "$(DEPDIR)/function.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='luabind/function.cpp' object='function.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o function.lo `test -f 'luabind/function.cpp' || echo '$(srcdir)/'`luabind/function.cpp

implicit_cast.lo: luabind/implicit_cast.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT implicit_cast.lo -MD -MP -MF "$(DEPDIR)/implicit_cast.Tpo" -c -o implicit_cast.lo `test -f 'luabind/implicit_cast.cpp' || echo '$(srcdir)/'`luabind/implicit_cast.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/implicit_cast.Tpo" "$(DEPDIR)/implicit_cast.Plo"; else rm -f "$(DEPDIR)/implicit_cast.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='luabind/implicit_cast.cpp' object='implicit_cast.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o implicit_cast.lo `test -f 'luabind/implicit_cast.cpp' || echo '$(srcdir)/'`luabind/implicit_cast.cpp

link_compatibility.lo: luabind/link_compatibility.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT link_compatibility.lo -MD -MP -MF "$(DEPDIR)/link_compatibility.Tpo" -c -o link_compatibility.lo `test -f 'luabind/link_compatibility.cpp' || echo '$(srcdir)/'`luabind/link_compatibility.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/link_compatibility.Tpo" "$(DEPDIR)/link_compatibility.Plo"; else rm -f "$(DEPDIR)/link_compatibility.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='luabind/link_compatibility.cpp' object='link_compatibility.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o link_compatibility.lo `test -f 'luabind/link_compatibility.cpp' || echo '$(srcdir)/'`luabind/link_compatibility.cpp

object_rep.lo: luabind/object_rep.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT object_rep.lo -MD -MP -MF "$(DEPDIR)/object_rep.Tpo" -c -o object_rep.lo `test -f 'luabind/object_rep.cpp' || echo '$(srcdir)/'`luabind/object_rep.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/object_rep.Tpo" "$(DEPDIR)/object_rep.Plo"; else rm -f "$(DEPDIR)/object_rep.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='luabind/object_rep.cpp' object='object_rep.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o object_rep.lo `test -f 'luabind/object_rep.cpp' || echo '$(srcdir)/'`luabind/object_rep.cpp

open.lo: luabind/open.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT open.lo -MD -MP -MF "$(DEPDIR)/open.Tpo" -c -o open.lo `test -f 'luabind/open.cpp' || echo '$(srcdir)/'`luabind/open.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/open.Tpo" "$(DEPDIR)/open.Plo"; else rm -f "$(DEPDIR)/open.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='luabind/open.cpp' object='open.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o open.lo `test -f 'luabind/open.cpp' || echo '$(srcdir)/'`luabind/open.cpp

overload_rep.lo: luabind/overload_rep.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT overload_rep.lo -MD -MP -MF "$(DEPDIR)/overload_rep.Tpo" -c -o overload_rep.lo `test -f 'luabind/overload_rep.cpp' || echo '$(srcdir)/'`luabind/overload_rep.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/overload_rep.Tpo" "$(DEPDIR)/overload_rep.Plo"; else rm -f "$(DEPDIR)/overload_rep.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='luabind/overload_rep.cpp' object='overload_rep.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o overload_rep.lo `test -f 'luabind/overload_rep.cpp' || echo '$(srcdir)/'`luabind/overload_rep.cpp

pcall.lo: luabind/pcall.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pcall.lo -MD -MP -MF "$(DEPDIR)/pcall.Tpo" -c -o pcall.lo `test -f 'luabind/pcall.cpp' || echo '$(srcdir)/'`luabind/pcall.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/pcall.Tpo" "$(DEPDIR)/pcall.Plo"; else rm -f "$(DEPDIR)/pcall.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='luabind/pcall.cpp' object='pcall.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pcall.lo `test -f 'luabind/pcall.cpp' || echo '$(srcdir)/'`luabind/pcall.cpp

ref.lo: luabind/ref.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ref.lo -MD -MP -MF "$(DEPDIR)/ref.Tpo" -c -o ref.lo `test -f 'luabind/ref.cpp' || echo '$(srcdir)/'`luabind/ref.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/ref.Tpo" "$(DEPDIR)/ref.Plo"; else rm -f "$(DEPDIR)/ref.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='luabind/ref.cpp' object='ref.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ref.lo `test -f 'luabind/ref.cpp' || echo '$(srcdir)/'`luabind/ref.cpp

scope.lo: luabind/scope.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scope.lo -MD -MP -MF "$(DEPDIR)/scope.Tpo" -c -o scope.lo `test -f 'luabind/scope.cpp' || echo '$(srcdir)/'`luabind/scope.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/scope.Tpo" "$(DEPDIR)/scope.Plo"; else rm -f "$(DEPDIR)/scope.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='luabind/scope.cpp' object='scope.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scope.lo `test -f 'luabind/scope.cpp' || echo '$(srcdir)/'`luabind/scope.cpp

stack_content_by_name.lo: luabind/stack_content_by_name.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT stack_content_by_name.lo -MD -MP -MF "$(DEPDIR)/stack_content_by_name.Tpo" -c -o stack_content_by_name.lo `test -f 'luabind/stack_content_by_name.cpp' || echo '$(srcdir)/'`luabind/stack_content_by_name.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/stack_content_by_name.Tpo" "$(DEPDIR)/stack_content_by_name.Plo"; else rm -f "$(DEPDIR)/stack_content_by_name.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='luabind/stack_content_by_name.cpp' object='stack_content_by_name.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o stack_content_by_name.lo `test -f 'luabind/stack_content_by_name.cpp' || echo '$(srcdir)/'`luabind/stack_content_by_name.cpp

weak_ref.lo: luabind/weak_ref.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT weak_ref.lo -MD -MP -MF "$(DEPDIR)/weak_ref.Tpo" -c -o weak_ref.lo `test -f 'luabind/weak_ref.cpp' || echo '$(srcdir)/'`luabind/weak_ref.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/weak_ref.Tpo" "$(DEPDIR)/weak_ref.Plo"; else rm -f "$(DEPDIR)/weak_ref.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='luabind/weak_ref.cpp' object='weak_ref.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o weak_ref.lo `test -f 'luabind/weak_ref.cpp' || echo '$(srcdir)/'`luabind/weak_ref.cpp

wrapper_base.lo: luabind/wrapper_base.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wrapper_base.lo -MD -MP -MF "$(DEPDIR)/wrapper_base.Tpo" -c -o wrapper_base.lo `test -f 'luabind/wrapper_base.cpp' || echo '$(srcdir)/'`luabind/wrapper_base.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/wrapper_base.Tpo" "$(DEPDIR)/wrapper_base.Plo"; else rm -f "$(DEPDIR)/wrapper_base.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='luabind/wrapper_base.cpp' object='wrapper_base.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wrapper_base.lo `test -f 'luabind/wrapper_base.cpp' || echo '$(srcdir)/'`luabind/wrapper_base.cpp

sc_marshal_mcbride.lo: cpp-scripts/custom/sc_marshal_mcbride.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sc_marshal_mcbride.lo -MD -MP -MF "$(DEPDIR)/sc_marshal_mcbride.Tpo" -c -o sc_marshal_mcbride.lo `test -f 'cpp-scripts/custom/sc_marshal_mcbride.cpp' || echo '$(srcdir)/'`cpp-scripts/custom/sc_marshal_mcbride.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/sc_marshal_mcbride.Tpo" "$(DEPDIR)/sc_marshal_mcbride.Plo"; else rm -f "$(DEPDIR)/sc_marshal_mcbride.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cpp-scripts/custom/sc_marshal_mcbride.cpp' object='sc_marshal_mcbride.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sc_marshal_mcbride.lo `test -f 'cpp-scripts/custom/sc_marshal_mcbride.cpp' || echo '$(srcdir)/'`cpp-scripts/custom/sc_marshal_mcbride.cpp

sc_silas_darkmoon.lo: cpp-scripts/custom/sc_silas_darkmoon.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sc_silas_darkmoon.lo -MD -MP -MF "$(DEPDIR)/sc_silas_darkmoon.Tpo" -c -o sc_silas_darkmoon.lo `test -f 'cpp-scripts/custom/sc_silas_darkmoon.cpp' || echo '$(srcdir)/'`cpp-scripts/custom/sc_silas_darkmoon.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/sc_silas_darkmoon.Tpo" "$(DEPDIR)/sc_silas_darkmoon.Plo"; else rm -f "$(DEPDIR)/sc_silas_darkmoon.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cpp-scripts/custom/sc_silas_darkmoon.cpp' object='sc_silas_darkmoon.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sc_silas_darkmoon.lo `test -f 'cpp-scripts/custom/sc_silas_darkmoon.cpp' || echo '$(srcdir)/'`cpp-scripts/custom/sc_silas_darkmoon.cpp

sc_skorn_whitecloud.lo: cpp-scripts/custom/sc_skorn_whitecloud.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sc_skorn_whitecloud.lo -MD -MP -MF "$(DEPDIR)/sc_skorn_whitecloud.Tpo" -c -o sc_skorn_whitecloud.lo `test -f 'cpp-scripts/custom/sc_skorn_whitecloud.cpp' || echo '$(srcdir)/'`cpp-scripts/custom/sc_skorn_whitecloud.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/sc_skorn_whitecloud.Tpo" "$(DEPDIR)/sc_skorn_whitecloud.Plo"; else rm -f "$(DEPDIR)/sc_skorn_whitecloud.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cpp-scripts/custom/sc_skorn_whitecloud.cpp' object='sc_skorn_whitecloud.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sc_skorn_whitecloud.lo `test -f 'cpp-scripts/custom/sc_skorn_whitecloud.cpp' || echo '$(srcdir)/'`cpp-scripts/custom/sc_skorn_whitecloud.cpp

sc_guard_bluffwatcher.lo: cpp-scripts/guards/sc_guard_bluffwatcher.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sc_guard_bluffwatcher.lo -MD -MP -MF "$(DEPDIR)/sc_guard_bluffwatcher.Tpo" -c -o sc_guard_bluffwatcher.lo `test -f 'cpp-scripts/guards/sc_guard_bluffwatcher.cpp' || echo '$(srcdir)/'`cpp-scripts/guards/sc_guard_bluffwatcher.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/sc_guard_bluffwatcher.Tpo" "$(DEPDIR)/sc_guard_bluffwatcher.Plo"; else rm -f "$(DEPDIR)/sc_guard_bluffwatcher.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cpp-scripts/guards/sc_guard_bluffwatcher.cpp' object='sc_guard_bluffwatcher.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sc_guard_bluffwatcher.lo `test -f 'cpp-scripts/guards/sc_guard_bluffwatcher.cpp' || echo '$(srcdir)/'`cpp-scripts/guards/sc_guard_bluffwatcher.cpp

sc_guard_darnassus.lo: cpp-scripts/guards/sc_guard_darnassus.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sc_guard_darnassus.lo -MD -MP -MF "$(DEPDIR)/sc_guard_darnassus.Tpo" -c -o sc_guard_darnassus.lo `test -f 'cpp-scripts/guards/sc_guard_darnassus.cpp' || echo '$(srcdir)/'`cpp-scripts/guards/sc_guard_darnassus.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/sc_guard_darnassus.Tpo" "$(DEPDIR)/sc_guard_darnassus.Plo"; else rm -f "$(DEPDIR)/sc_guard_darnassus.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cpp-scripts/guards/sc_guard_darnassus.cpp' object='sc_guard_darnassus.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sc_guard_darnassus.lo `test -f 'cpp-scripts/guards/sc_guard_darnassus.cpp' || echo '$(srcdir)/'`cpp-scripts/guards/sc_guard_darnassus.cpp

sc_guard_dunmorogh.lo: cpp-scripts/guards/sc_guard_dunmorogh.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sc_guard_dunmorogh.lo -MD -MP -MF "$(DEPDIR)/sc_guard_dunmorogh.Tpo" -c -o sc_guard_dunmorogh.lo `test -f 'cpp-scripts/guards/sc_guard_dunmorogh.cpp' || echo '$(srcdir)/'`cpp-scripts/guards/sc_guard_dunmorogh.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/sc_guard_dunmorogh.Tpo" "$(DEPDIR)/sc_guard_dunmorogh.Plo"; else rm -f "$(DEPDIR)/sc_guard_dunmorogh.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cpp-scripts/guards/sc_guard_dunmorogh.cpp' object='sc_guard_dunmorogh.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sc_guard_dunmorogh.lo `test -f 'cpp-scripts/guards/sc_guard_dunmorogh.cpp' || echo '$(srcdir)/'`cpp-scripts/guards/sc_guard_dunmorogh.cpp

sc_guard_durotar.lo: cpp-scripts/guards/sc_guard_durotar.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sc_guard_durotar.lo -MD -MP -MF "$(DEPDIR)/sc_guard_durotar.Tpo" -c -o sc_guard_durotar.lo `test -f 'cpp-scripts/guards/sc_guard_durotar.cpp' || echo '$(srcdir)/'`cpp-scripts/guards/sc_guard_durotar.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/sc_guard_durotar.Tpo" "$(DEPDIR)/sc_guard_durotar.Plo"; else rm -f "$(DEPDIR)/sc_guard_durotar.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cpp-scripts/guards/sc_guard_durotar.cpp' object='sc_guard_durotar.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sc_guard_durotar.lo `test -f 'cpp-scripts/guards/sc_guard_durotar.cpp' || echo '$(srcdir)/'`cpp-scripts/guards/sc_guard_durotar.cpp

sc_guard_elwynnforest.lo: cpp-scripts/guards/sc_guard_elwynnforest.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sc_guard_elwynnforest.lo -MD -MP -MF "$(DEPDIR)/sc_guard_elwynnforest.Tpo" -c -o sc_guard_elwynnforest.lo `test -f 'cpp-scripts/guards/sc_guard_elwynnforest.cpp' || echo '$(srcdir)/'`cpp-scripts/guards/sc_guard_elwynnforest.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/sc_guard_elwynnforest.Tpo" "$(DEPDIR)/sc_guard_elwynnforest.Plo"; else rm -f "$(DEPDIR)/sc_guard_elwynnforest.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cpp-scripts/guards/sc_guard_elwynnforest.cpp' object='sc_guard_elwynnforest.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sc_guard_elwynnforest.lo `test -f 'cpp-scripts/guards/sc_guard_elwynnforest.cpp' || echo '$(srcdir)/'`cpp-scripts/guards/sc_guard_elwynnforest.cpp

sc_guard_ironforge.lo: cpp-scripts/guards/sc_guard_ironforge.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sc_guard_ironforge.lo -MD -MP -MF "$(DEPDIR)/sc_guard_ironforge.Tpo" -c -o sc_guard_ironforge.lo `test -f 'cpp-scripts/guards/sc_guard_ironforge.cpp' || echo '$(srcdir)/'`cpp-scripts/guards/sc_guard_ironforge.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/sc_guard_ironforge.Tpo" "$(DEPDIR)/sc_guard_ironforge.Plo"; else rm -f "$(DEPDIR)/sc_guard_ironforge.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cpp-scripts/guards/sc_guard_ironforge.cpp' object='sc_guard_ironforge.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sc_guard_ironforge.lo `test -f 'cpp-scripts/guards/sc_guard_ironforge.cpp' || echo '$(srcdir)/'`cpp-scripts/guards/sc_guard_ironforge.cpp

sc_guard_mulgore.lo: cpp-scripts/guards/sc_guard_mulgore.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sc_guard_mulgore.lo -MD -MP -MF "$(DEPDIR)/sc_guard_mulgore.Tpo" -c -o sc_guard_mulgore.lo `test -f 'cpp-scripts/guards/sc_guard_mulgore.cpp' || echo '$(srcdir)/'`cpp-scripts/guards/sc_guard_mulgore.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/sc_guard_mulgore.Tpo" "$(DEPDIR)/sc_guard_mulgore.Plo"; else rm -f "$(DEPDIR)/sc_guard_mulgore.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cpp-scripts/guards/sc_guard_mulgore.cpp' object='sc_guard_mulgore.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sc_guard_mulgore.lo `test -f 'cpp-scripts/guards/sc_guard_mulgore.cpp' || echo '$(srcdir)/'`cpp-scripts/guards/sc_guard_mulgore.cpp

sc_guard_orgrimmar.lo: cpp-scripts/guards/sc_guard_orgrimmar.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sc_guard_orgrimmar.lo -MD -MP -MF "$(DEPDIR)/sc_guard_orgrimmar.Tpo" -c -o sc_guard_orgrimmar.lo `test -f 'cpp-scripts/guards/sc_guard_orgrimmar.cpp' || echo '$(srcdir)/'`cpp-scripts/guards/sc_guard_orgrimmar.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/sc_guard_orgrimmar.Tpo" "$(DEPDIR)/sc_guard_orgrimmar.Plo"; else rm -f "$(DEPDIR)/sc_guard_orgrimmar.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cpp-scripts/guards/sc_guard_orgrimmar.cpp' object='sc_guard_orgrimmar.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sc_guard_orgrimmar.lo `test -f 'cpp-scripts/guards/sc_guard_orgrimmar.cpp' || echo '$(srcdir)/'`cpp-scripts/guards/sc_guard_orgrimmar.cpp

sc_guard_stormwind.lo: cpp-scripts/guards/sc_guard_stormwind.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sc_guard_stormwind.lo -MD -MP -MF "$(DEPDIR)/sc_guard_stormwind.Tpo" -c -o sc_guard_stormwind.lo `test -f 'cpp-scripts/guards/sc_guard_stormwind.cpp' || echo '$(srcdir)/'`cpp-scripts/guards/sc_guard_stormwind.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/sc_guard_stormwind.Tpo" "$(DEPDIR)/sc_guard_stormwind.Plo"; else rm -f "$(DEPDIR)/sc_guard_stormwind.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cpp-scripts/guards/sc_guard_stormwind.cpp' object='sc_guard_stormwind.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sc_guard_stormwind.lo `test -f 'cpp-scripts/guards/sc_guard_stormwind.cpp' || echo '$(srcdir)/'`cpp-scripts/guards/sc_guard_stormwind.cpp

sc_guard_teldrassil.lo: cpp-scripts/guards/sc_guard_teldrassil.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sc_guard_teldrassil.lo -MD -MP -MF "$(DEPDIR)/sc_guard_teldrassil.Tpo" -c -o sc_guard_teldrassil.lo `test -f 'cpp-scripts/guards/sc_guard_teldrassil.cpp' || echo '$(srcdir)/'`cpp-scripts/guards/sc_guard_teldrassil.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/sc_guard_teldrassil.Tpo" "$(DEPDIR)/sc_guard_teldrassil.Plo"; else rm -f "$(DEPDIR)/sc_guard_teldrassil.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cpp-scripts/guards/sc_guard_teldrassil.cpp' object='sc_guard_teldrassil.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sc_guard_teldrassil.lo `test -f 'cpp-scripts/guards/sc_guard_teldrassil.cpp' || echo '$(srcdir)/'`cpp-scripts/guards/sc_guard_teldrassil.cpp

sc_guard_tirisfal.lo: cpp-scripts/guards/sc_guard_tirisfal.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sc_guard_tirisfal.lo -MD -MP -MF "$(DEPDIR)/sc_guard_tirisfal.Tpo" -c -o sc_guard_tirisfal.lo `test -f 'cpp-scripts/guards/sc_guard_tirisfal.cpp' || echo '$(srcdir)/'`cpp-scripts/guards/sc_guard_tirisfal.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/sc_guard_tirisfal.Tpo" "$(DEPDIR)/sc_guard_tirisfal.Plo"; else rm -f "$(DEPDIR)/sc_guard_tirisfal.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cpp-scripts/guards/sc_guard_tirisfal.cpp' object='sc_guard_tirisfal.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sc_guard_tirisfal.lo `test -f 'cpp-scripts/guards/sc_guard_tirisfal.cpp' || echo '$(srcdir)/'`cpp-scripts/guards/sc_guard_tirisfal.cpp

sc_guard_undercity.lo: cpp-scripts/guards/sc_guard_undercity.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sc_guard_undercity.lo -MD -MP -MF "$(DEPDIR)/sc_guard_undercity.Tpo" -c -o sc_guard_undercity.lo `test -f 'cpp-scripts/guards/sc_guard_undercity.cpp' || echo '$(srcdir)/'`cpp-scripts/guards/sc_guard_undercity.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/sc_guard_undercity.Tpo" "$(DEPDIR)/sc_guard_undercity.Plo"; else rm -f "$(DEPDIR)/sc_guard_undercity.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cpp-scripts/guards/sc_guard_undercity.cpp' object='sc_guard_undercity.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sc_guard_undercity.lo `test -f 'cpp-scripts/guards/sc_guard_undercity.cpp' || echo '$(srcdir)/'`cpp-scripts/guards/sc_guard_undercity.cpp

sc_alliance_commander.lo: cpp-scripts/honor/alliance/sc_alliance_commander.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sc_alliance_commander.lo -MD -MP -MF "$(DEPDIR)/sc_alliance_commander.Tpo" -c -o sc_alliance_commander.lo `test -f 'cpp-scripts/honor/alliance/sc_alliance_commander.cpp' || echo '$(srcdir)/'`cpp-scripts/honor/alliance/sc_alliance_commander.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/sc_alliance_commander.Tpo" "$(DEPDIR)/sc_alliance_commander.Plo"; else rm -f "$(DEPDIR)/sc_alliance_commander.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cpp-scripts/honor/alliance/sc_alliance_commander.cpp' object='sc_alliance_commander.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sc_alliance_commander.lo `test -f 'cpp-scripts/honor/alliance/sc_alliance_commander.cpp' || echo '$(srcdir)/'`cpp-scripts/honor/alliance/sc_alliance_commander.cpp

sc_alliance_corporal.lo: cpp-scripts/honor/alliance/sc_alliance_corporal.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sc_alliance_corporal.lo -MD -MP -MF "$(DEPDIR)/sc_alliance_corporal.Tpo" -c -o sc_alliance_corporal.lo `test -f 'cpp-scripts/honor/alliance/sc_alliance_corporal.cpp' || echo '$(srcdir)/'`cpp-scripts/honor/alliance/sc_alliance_corporal.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/sc_alliance_corporal.Tpo" "$(DEPDIR)/sc_alliance_corporal.Plo"; else rm -f "$(DEPDIR)/sc_alliance_corporal.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cpp-scripts/honor/alliance/sc_alliance_corporal.cpp' object='sc_alliance_corporal.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sc_alliance_corporal.lo `test -f 'cpp-scripts/honor/alliance/sc_alliance_corporal.cpp' || echo '$(srcdir)/'`cpp-scripts/honor/alliance/sc_alliance_corporal.cpp

sc_alliance_field_marshal.lo: cpp-scripts/honor/alliance/sc_alliance_field_marshal.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sc_alliance_field_marshal.lo -MD -MP -MF "$(DEPDIR)/sc_alliance_field_marshal.Tpo" -c -o sc_alliance_field_marshal.lo `test -f 'cpp-scripts/honor/alliance/sc_alliance_field_marshal.cpp' || echo '$(srcdir)/'`cpp-scripts/honor/alliance/sc_alliance_field_marshal.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/sc_alliance_field_marshal.Tpo" "$(DEPDIR)/sc_alliance_field_marshal.Plo"; else rm -f "$(DEPDIR)/sc_alliance_field_marshal.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cpp-scripts/honor/alliance/sc_alliance_field_marshal.cpp' object='sc_alliance_field_marshal.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sc_alliance_field_marshal.lo `test -f 'cpp-scripts/honor/alliance/sc_alliance_field_marshal.cpp' || echo '$(srcdir)/'`cpp-scripts/honor/alliance/sc_alliance_field_marshal.cpp

sc_alliance_grand_marshal.lo: cpp-scripts/honor/alliance/sc_alliance_grand_marshal.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sc_alliance_grand_marshal.lo -MD -MP -MF "$(DEPDIR)/sc_alliance_grand_marshal.Tpo" -c -o sc_alliance_grand_marshal.lo `test -f 'cpp-scripts/honor/alliance/sc_alliance_grand_marshal.cpp' || echo '$(srcdir)/'`cpp-scripts/honor/alliance/sc_alliance_grand_marshal.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/sc_alliance_grand_marshal.Tpo" "$(DEPDIR)/sc_alliance_grand_marshal.Plo"; else rm -f "$(DEPDIR)/sc_alliance_grand_marshal.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cpp-scripts/honor/alliance/sc_alliance_grand_marshal.cpp' object='sc_alliance_grand_marshal.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sc_alliance_grand_marshal.lo `test -f 'cpp-scripts/honor/alliance/sc_alliance_grand_marshal.cpp' || echo '$(srcdir)/'`cpp-scripts/honor/alliance/sc_alliance_grand_marshal.cpp

sc_alliance_knight-captain.lo: cpp-scripts/honor/alliance/sc_alliance_knight-captain.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sc_alliance_knight-captain.lo -MD -MP -MF "$(DEPDIR)/sc_alliance_knight-captain.Tpo" -c -o sc_alliance_knight-captain.lo `test -f 'cpp-scripts/honor/alliance/sc_alliance_knight-captain.cpp' || echo '$(srcdir)/'`cpp-scripts/honor/alliance/sc_alliance_knight-captain.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/sc_alliance_knight-captain.Tpo" "$(DEPDIR)/sc_alliance_knight-captain.Plo"; else rm -f "$(DEPDIR)/sc_alliance_knight-captain.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cpp-scripts/honor/alliance/sc_alliance_knight-captain.cpp' object='sc_alliance_knight-captain.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sc_alliance_knight-captain.lo `test -f 'cpp-scripts/honor/alliance/sc_alliance_knight-captain.cpp' || echo '$(srcdir)/'`cpp-scripts/honor/alliance/sc_alliance_knight-captain.cpp

sc_alliance_knight-lieutenant.lo: cpp-scripts/honor/alliance/sc_alliance_knight-lieutenant.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sc_alliance_knight-lieutenant.lo -MD -MP -MF "$(DEPDIR)/sc_alliance_knight-lieutenant.Tpo" -c -o sc_alliance_knight-lieutenant.lo `test -f 'cpp-scripts/honor/alliance/sc_alliance_knight-lieutenant.cpp' || echo '$(srcdir)/'`cpp-scripts/honor/alliance/sc_alliance_knight-lieutenant.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/sc_alliance_knight-lieutenant.Tpo" "$(DEPDIR)/sc_alliance_knight-lieutenant.Plo"; else rm -f "$(DEPDIR)/sc_alliance_knight-lieutenant.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cpp-scripts/honor/alliance/sc_alliance_knight-lieutenant.cpp' object='sc_alliance_knight-lieutenant.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sc_alliance_knight-lieutenant.lo `test -f 'cpp-scripts/honor/alliance/sc_alliance_knight-lieutenant.cpp' || echo '$(srcdir)/'`cpp-scripts/honor/alliance/sc_alliance_knight-lieutenant.cpp

sc_alliance_knight.lo: cpp-scripts/honor/alliance/sc_alliance_knight.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sc_alliance_knight.lo -MD -MP -MF "$(DEPDIR)/sc_alliance_knight.Tpo" -c -o sc_alliance_knight.lo `test -f 'cpp-scripts/honor/alliance/sc_alliance_knight.cpp' || echo '$(srcdir)/'`cpp-scripts/honor/alliance/sc_alliance_knight.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/sc_alliance_knight.Tpo" "$(DEPDIR)/sc_alliance_knight.Plo"; else rm -f "$(DEPDIR)/sc_alliance_knight.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cpp-scripts/honor/alliance/sc_alliance_knight.cpp' object='sc_alliance_knight.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sc_alliance_knight.lo `test -f 'cpp-scripts/honor/alliance/sc_alliance_knight.cpp' || echo '$(srcdir)/'`cpp-scripts/honor/alliance/sc_alliance_knight.cpp

sc_alliance_knight_champion.lo: cpp-scripts/honor/alliance/sc_alliance_knight_champion.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sc_alliance_knight_champion.lo -MD -MP -MF "$(DEPDIR)/sc_alliance_knight_champion.Tpo" -c -o sc_alliance_knight_champion.lo `test -f 'cpp-scripts/honor/alliance/sc_alliance_knight_champion.cpp' || echo '$(srcdir)/'`cpp-scripts/honor/alliance/sc_alliance_knight_champion.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/sc_alliance_knight_champion.Tpo" "$(DEPDIR)/sc_alliance_knight_champion.Plo"; else rm -f "$(DEPDIR)/sc_alliance_knight_champion.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cpp-scripts/honor/alliance/sc_alliance_knight_champion.cpp' object='sc_alliance_knight_champion.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sc_alliance_knight_champion.lo `test -f 'cpp-scripts/honor/alliance/sc_alliance_knight_champion.cpp' || echo '$(srcdir)/'`cpp-scripts/honor/alliance/sc_alliance_knight_champion.cpp

sc_alliance_lieutenant_commander.lo: cpp-scripts/honor/alliance/sc_alliance_lieutenant_commander.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sc_alliance_lieutenant_commander.lo -MD -MP -MF "$(DEPDIR)/sc_alliance_lieutenant_commander.Tpo" -c -o sc_alliance_lieutenant_commander.lo `test -f 'cpp-scripts/honor/alliance/sc_alliance_lieutenant_commander.cpp' || echo '$(srcdir)/'`cpp-scripts/honor/alliance/sc_alliance_lieutenant_commander.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/sc_alliance_lieutenant_commander.Tpo" "$(DEPDIR)/sc_alliance_lieutenant_commander.Plo"; else rm -f "$(DEPDIR)/sc_alliance_lieutenant_commander.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cpp-scripts/honor/alliance/sc_alliance_lieutenant_commander.cpp' object='sc_alliance_lieutenant_commander.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sc_alliance_lieutenant_commander.lo `test -f 'cpp-scripts/honor/alliance/sc_alliance_lieutenant_commander.cpp' || echo '$(srcdir)/'`cpp-scripts/honor/alliance/sc_alliance_lieutenant_commander.cpp

sc_alliance_marshal.lo: cpp-scripts/honor/alliance/sc_alliance_marshal.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sc_alliance_marshal.lo -MD -MP -MF "$(DEPDIR)/sc_alliance_marshal.Tpo" -c -o sc_alliance_marshal.lo `test -f 'cpp-scripts/honor/alliance/sc_alliance_marshal.cpp' || echo '$(srcdir)/'`cpp-scripts/honor/alliance/sc_alliance_marshal.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/sc_alliance_marshal.Tpo" "$(DEPDIR)/sc_alliance_marshal.Plo"; else rm -f "$(DEPDIR)/sc_alliance_marshal.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cpp-scripts/honor/alliance/sc_alliance_marshal.cpp' object='sc_alliance_marshal.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sc_alliance_marshal.lo `test -f 'cpp-scripts/honor/alliance/sc_alliance_marshal.cpp' || echo '$(srcdir)/'`cpp-scripts/honor/alliance/sc_alliance_marshal.cpp

sc_alliance_master_sergeant.lo: cpp-scripts/honor/alliance/sc_alliance_master_sergeant.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sc_alliance_master_sergeant.lo -MD -MP -MF "$(DEPDIR)/sc_alliance_master_sergeant.Tpo" -c -o sc_alliance_master_sergeant.lo `test -f 'cpp-scripts/honor/alliance/sc_alliance_master_sergeant.cpp' || echo '$(srcdir)/'`cpp-scripts/honor/alliance/sc_alliance_master_sergeant.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/sc_alliance_master_sergeant.Tpo" "$(DEPDIR)/sc_alliance_master_sergeant.Plo"; else rm -f "$(DEPDIR)/sc_alliance_master_sergeant.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cpp-scripts/honor/alliance/sc_alliance_master_sergeant.cpp' object='sc_alliance_master_sergeant.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sc_alliance_master_sergeant.lo `test -f 'cpp-scripts/honor/alliance/sc_alliance_master_sergeant.cpp' || echo '$(srcdir)/'`cpp-scripts/honor/alliance/sc_alliance_master_sergeant.cpp

sc_alliance_private.lo: cpp-scripts/honor/alliance/sc_alliance_private.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sc_alliance_private.lo -MD -MP -MF "$(DEPDIR)/sc_alliance_private.Tpo" -c -o sc_alliance_private.lo `test -f 'cpp-scripts/honor/alliance/sc_alliance_private.cpp' || echo '$(srcdir)/'`cpp-scripts/honor/alliance/sc_alliance_private.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/sc_alliance_private.Tpo" "$(DEPDIR)/sc_alliance_private.Plo"; else rm -f "$(DEPDIR)/sc_alliance_private.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cpp-scripts/honor/alliance/sc_alliance_private.cpp' object='sc_alliance_private.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sc_alliance_private.lo `test -f 'cpp-scripts/honor/alliance/sc_alliance_private.cpp' || echo '$(srcdir)/'`cpp-scripts/honor/alliance/sc_alliance_private.cpp

sc_alliance_sergeant.lo: cpp-scripts/honor/alliance/sc_alliance_sergeant.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sc_alliance_sergeant.lo -MD -MP -MF "$(DEPDIR)/sc_alliance_sergeant.Tpo" -c -o sc_alliance_sergeant.lo `test -f 'cpp-scripts/honor/alliance/sc_alliance_sergeant.cpp' || echo '$(srcdir)/'`cpp-scripts/honor/alliance/sc_alliance_sergeant.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/sc_alliance_sergeant.Tpo" "$(DEPDIR)/sc_alliance_sergeant.Plo"; else rm -f "$(DEPDIR)/sc_alliance_sergeant.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cpp-scripts/honor/alliance/sc_alliance_sergeant.cpp' object='sc_alliance_sergeant.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sc_alliance_sergeant.lo `test -f 'cpp-scripts/honor/alliance/sc_alliance_sergeant.cpp' || echo '$(srcdir)/'`cpp-scripts/honor/alliance/sc_alliance_sergeant.cpp

sc_alliance_sergeant_major.lo: cpp-scripts/honor/alliance/sc_alliance_sergeant_major.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sc_alliance_sergeant_major.lo -MD -MP -MF "$(DEPDIR)/sc_alliance_sergeant_major.Tpo" -c -o sc_alliance_sergeant_major.lo `test -f 'cpp-scripts/honor/alliance/sc_alliance_sergeant_major.cpp' || echo '$(srcdir)/'`cpp-scripts/honor/alliance/sc_alliance_sergeant_major.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/sc_alliance_sergeant_major.Tpo" "$(DEPDIR)/sc_alliance_sergeant_major.Plo"; else rm -f "$(DEPDIR)/sc_alliance_sergeant_major.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cpp-scripts/honor/alliance/sc_alliance_sergeant_major.cpp' object='sc_alliance_sergeant_major.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sc_alliance_sergeant_major.lo `test -f 'cpp-scripts/honor/alliance/sc_alliance_sergeant_major.cpp' || echo '$(srcdir)/'`cpp-scripts/honor/alliance/sc_alliance_sergeant_major.cpp

sc_horde_blood_guard.lo: cpp-scripts/honor/horde/sc_horde_blood_guard.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sc_horde_blood_guard.lo -MD -MP -MF "$(DEPDIR)/sc_horde_blood_guard.Tpo" -c -o sc_horde_blood_guard.lo `test -f 'cpp-scripts/honor/horde/sc_horde_blood_guard.cpp' || echo '$(srcdir)/'`cpp-scripts/honor/horde/sc_horde_blood_guard.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/sc_horde_blood_guard.Tpo" "$(DEPDIR)/sc_horde_blood_guard.Plo"; else rm -f "$(DEPDIR)/sc_horde_blood_guard.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cpp-scripts/honor/horde/sc_horde_blood_guard.cpp' object='sc_horde_blood_guard.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sc_horde_blood_guard.lo `test -f 'cpp-scripts/honor/horde/sc_horde_blood_guard.cpp' || echo '$(srcdir)/'`cpp-scripts/honor/horde/sc_horde_blood_guard.cpp

sc_horde_centurion.lo: cpp-scripts/honor/horde/sc_horde_centurion.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sc_horde_centurion.lo -MD -MP -MF "$(DEPDIR)/sc_horde_centurion.Tpo" -c -o sc_horde_centurion.lo `test -f 'cpp-scripts/honor/horde/sc_horde_centurion.cpp' || echo '$(srcdir)/'`cpp-scripts/honor/horde/sc_horde_centurion.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/sc_horde_centurion.Tpo" "$(DEPDIR)/sc_horde_centurion.Plo"; else rm -f "$(DEPDIR)/sc_horde_centurion.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cpp-scripts/honor/horde/sc_horde_centurion.cpp' object='sc_horde_centurion.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sc_horde_centurion.lo `test -f 'cpp-scripts/honor/horde/sc_horde_centurion.cpp' || echo '$(srcdir)/'`cpp-scripts/honor/horde/sc_horde_centurion.cpp

sc_horde_champion.lo: cpp-scripts/honor/horde/sc_horde_champion.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sc_horde_champion.lo -MD -MP -MF "$(DEPDIR)/sc_horde_champion.Tpo" -c -o sc_horde_champion.lo `test -f 'cpp-scripts/honor/horde/sc_horde_champion.cpp' || echo '$(srcdir)/'`cpp-scripts/honor/horde/sc_horde_champion.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/sc_horde_champion.Tpo" "$(DEPDIR)/sc_horde_champion.Plo"; else rm -f "$(DEPDIR)/sc_horde_champion.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cpp-scripts/honor/horde/sc_horde_champion.cpp' object='sc_horde_champion.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sc_horde_champion.lo `test -f 'cpp-scripts/honor/horde/sc_horde_champion.cpp' || echo '$(srcdir)/'`cpp-scripts/honor/horde/sc_horde_champion.cpp

sc_horde_first_sergeant.lo: cpp-scripts/honor/horde/sc_horde_first_sergeant.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sc_horde_first_sergeant.lo -MD -MP -MF "$(DEPDIR)/sc_horde_first_sergeant.Tpo" -c -o sc_horde_first_sergeant.lo `test -f 'cpp-scripts/honor/horde/sc_horde_first_sergeant.cpp' || echo '$(srcdir)/'`cpp-scripts/honor/horde/sc_horde_first_sergeant.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/sc_horde_first_sergeant.Tpo" "$(DEPDIR)/sc_horde_first_sergeant.Plo"; else rm -f "$(DEPDIR)/sc_horde_first_sergeant.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cpp-scripts/honor/horde/sc_horde_first_sergeant.cpp' object='sc_horde_first_sergeant.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sc_horde_first_sergeant.lo `test -f 'cpp-scripts/honor/horde/sc_horde_first_sergeant.cpp' || echo '$(srcdir)/'`cpp-scripts/honor/horde/sc_horde_first_sergeant.cpp

sc_horde_general.lo: cpp-scripts/honor/horde/sc_horde_general.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sc_horde_general.lo -MD -MP -MF "$(DEPDIR)/sc_horde_general.Tpo" -c -o sc_horde_general.lo `test -f 'cpp-scripts/honor/horde/sc_horde_general.cpp' || echo '$(srcdir)/'`cpp-scripts/honor/horde/sc_horde_general.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/sc_horde_general.Tpo" "$(DEPDIR)/sc_horde_general.Plo"; else rm -f "$(DEPDIR)/sc_horde_general.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cpp-scripts/honor/horde/sc_horde_general.cpp' object='sc_horde_general.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sc_horde_general.lo `test -f 'cpp-scripts/honor/horde/sc_horde_general.cpp' || echo '$(srcdir)/'`cpp-scripts/honor/horde/sc_horde_general.cpp

sc_horde_grunt.lo: cpp-scripts/honor/horde/sc_horde_grunt.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sc_horde_grunt.lo -MD -MP -MF "$(DEPDIR)/sc_horde_grunt.Tpo" -c -o sc_horde_grunt.lo `test -f 'cpp-scripts/honor/horde/sc_horde_grunt.cpp' || echo '$(srcdir)/'`cpp-scripts/honor/horde/sc_horde_grunt.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/sc_horde_grunt.Tpo" "$(DEPDIR)/sc_horde_grunt.Plo"; else rm -f "$(DEPDIR)/sc_horde_grunt.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cpp-scripts/honor/horde/sc_horde_grunt.cpp' object='sc_horde_grunt.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sc_horde_grunt.lo `test -f 'cpp-scripts/honor/horde/sc_horde_grunt.cpp' || echo '$(srcdir)/'`cpp-scripts/honor/horde/sc_horde_grunt.cpp

sc_horde_high_warlord.lo: cpp-scripts/honor/horde/sc_horde_high_warlord.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sc_horde_high_warlord.lo -MD -MP -MF "$(DEPDIR)/sc_horde_high_warlord.Tpo" -c -o sc_horde_high_warlord.lo `test -f 'cpp-scripts/honor/horde/sc_horde_high_warlord.cpp' || echo '$(srcdir)/'`cpp-scripts/honor/horde/sc_horde_high_warlord.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/sc_horde_high_warlord.Tpo" "$(DEPDIR)/sc_horde_high_warlord.Plo"; else rm -f "$(DEPDIR)/sc_horde_high_warlord.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cpp-scripts/honor/horde/sc_horde_high_warlord.cpp' object='sc_horde_high_warlord.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sc_horde_high_warlord.lo `test -f 'cpp-scripts/honor/horde/sc_horde_high_warlord.cpp' || echo '$(srcdir)/'`cpp-scripts/honor/horde/sc_horde_high_warlord.cpp

sc_horde_legionaire.lo: cpp-scripts/honor/horde/sc_horde_legionaire.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sc_horde_legionaire.lo -MD -MP -MF "$(DEPDIR)/sc_horde_legionaire.Tpo" -c -o sc_horde_legionaire.lo `test -f 'cpp-scripts/honor/horde/sc_horde_legionaire.cpp' || echo '$(srcdir)/'`cpp-scripts/honor/horde/sc_horde_legionaire.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/sc_horde_legionaire.Tpo" "$(DEPDIR)/sc_horde_legionaire.Plo"; else rm -f "$(DEPDIR)/sc_horde_legionaire.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cpp-scripts/honor/horde/sc_horde_legionaire.cpp' object='sc_horde_legionaire.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sc_horde_legionaire.lo `test -f 'cpp-scripts/honor/horde/sc_horde_legionaire.cpp' || echo '$(srcdir)/'`cpp-scripts/honor/horde/sc_horde_legionaire.cpp

sc_horde_lieutenant_general.lo: cpp-scripts/honor/horde/sc_horde_lieutenant_general.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sc_horde_lieutenant_general.lo -MD -MP -MF "$(DEPDIR)/sc_horde_lieutenant_general.Tpo" -c -o sc_horde_lieutenant_general.lo `test -f 'cpp-scripts/honor/horde/sc_horde_lieutenant_general.cpp' || echo '$(srcdir)/'`cpp-scripts/honor/horde/sc_horde_lieutenant_general.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/sc_horde_lieutenant_general.Tpo" "$(DEPDIR)/sc_horde_lieutenant_general.Plo"; else rm -f "$(DEPDIR)/sc_horde_lieutenant_general.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cpp-scripts/honor/horde/sc_horde_lieutenant_general.cpp' object='sc_horde_lieutenant_general.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sc_horde_lieutenant_general.lo `test -f 'cpp-scripts/honor/horde/sc_horde_lieutenant_general.cpp' || echo '$(srcdir)/'`cpp-scripts/honor/horde/sc_horde_lieutenant_general.cpp

sc_horde_scout.lo: cpp-scripts/honor/horde/sc_horde_scout.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sc_horde_scout.lo -MD -MP -MF "$(DEPDIR)/sc_horde_scout.Tpo" -c -o sc_horde_scout.lo `test -f 'cpp-scripts/honor/horde/sc_horde_scout.cpp' || echo '$(srcdir)/'`cpp-scripts/honor/horde/sc_horde_scout.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/sc_horde_scout.Tpo" "$(DEPDIR)/sc_horde_scout.Plo"; else rm -f "$(DEPDIR)/sc_horde_scout.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cpp-scripts/honor/horde/sc_horde_scout.cpp' object='sc_horde_scout.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sc_horde_scout.lo `test -f 'cpp-scripts/honor/horde/sc_horde_scout.cpp' || echo '$(srcdir)/'`cpp-scripts/honor/horde/sc_horde_scout.cpp

sc_horde_senior_sergeant.lo: cpp-scripts/honor/horde/sc_horde_senior_sergeant.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sc_horde_senior_sergeant.lo -MD -MP -MF "$(DEPDIR)/sc_horde_senior_sergeant.Tpo" -c -o sc_horde_senior_sergeant.lo `test -f 'cpp-scripts/honor/horde/sc_horde_senior_sergeant.cpp' || echo '$(srcdir)/'`cpp-scripts/honor/horde/sc_horde_senior_sergeant.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/sc_horde_senior_sergeant.Tpo" "$(DEPDIR)/sc_horde_senior_sergeant.Plo"; else rm -f "$(DEPDIR)/sc_horde_senior_sergeant.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cpp-scripts/honor/horde/sc_horde_senior_sergeant.cpp' object='sc_horde_senior_sergeant.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sc_horde_senior_sergeant.lo `test -f 'cpp-scripts/honor/horde/sc_horde_senior_sergeant.cpp' || echo '$(srcdir)/'`cpp-scripts/honor/horde/sc_horde_senior_sergeant.cpp

sc_horde_sergeant.lo: cpp-scripts/honor/horde/sc_horde_sergeant.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sc_horde_sergeant.lo -MD -MP -MF "$(DEPDIR)/sc_horde_sergeant.Tpo" -c -o sc_horde_sergeant.lo `test -f 'cpp-scripts/honor/horde/sc_horde_sergeant.cpp' || echo '$(srcdir)/'`cpp-scripts/honor/horde/sc_horde_sergeant.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/sc_horde_sergeant.Tpo" "$(DEPDIR)/sc_horde_sergeant.Plo"; else rm -f "$(DEPDIR)/sc_horde_sergeant.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cpp-scripts/honor/horde/sc_horde_sergeant.cpp' object='sc_horde_sergeant.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sc_horde_sergeant.lo `test -f 'cpp-scripts/honor/horde/sc_horde_sergeant.cpp' || echo '$(srcdir)/'`cpp-scripts/honor/horde/sc_horde_sergeant.cpp

sc_horde_stone_guard.lo: cpp-scripts/honor/horde/sc_horde_stone_guard.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sc_horde_stone_guard.lo -MD -MP -MF "$(DEPDIR)/sc_horde_stone_guard.Tpo" -c -o sc_horde_stone_guard.lo `test -f 'cpp-scripts/honor/horde/sc_horde_stone_guard.cpp' || echo '$(srcdir)/'`cpp-scripts/honor/horde/sc_horde_stone_guard.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/sc_horde_stone_guard.Tpo" "$(DEPDIR)/sc_horde_stone_guard.Plo"; else rm -f "$(DEPDIR)/sc_horde_stone_guard.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cpp-scripts/honor/horde/sc_horde_stone_guard.cpp' object='sc_horde_stone_guard.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sc_horde_stone_guard.lo `test -f 'cpp-scripts/honor/horde/sc_horde_stone_guard.cpp' || echo '$(srcdir)/'`cpp-scripts/honor/horde/sc_horde_stone_guard.cpp

sc_horde_warlord.lo: cpp-scripts/honor/horde/sc_horde_warlord.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sc_horde_warlord.lo -MD -MP -MF "$(DEPDIR)/sc_horde_warlord.Tpo" -c -o sc_horde_warlord.lo `test -f 'cpp-scripts/honor/horde/sc_horde_warlord.cpp' || echo '$(srcdir)/'`cpp-scripts/honor/horde/sc_horde_warlord.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/sc_horde_warlord.Tpo" "$(DEPDIR)/sc_horde_warlord.Plo"; else rm -f "$(DEPDIR)/sc_horde_warlord.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cpp-scripts/honor/horde/sc_horde_warlord.cpp' object='sc_horde_warlord.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sc_horde_warlord.lo `test -f 'cpp-scripts/honor/horde/sc_horde_warlord.cpp' || echo '$(srcdir)/'`cpp-scripts/honor/horde/sc_horde_warlord.cpp

sc_battlemaster.lo: cpp-scripts/serveus/sc_battlemaster.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sc_battlemaster.lo -MD -MP -MF "$(DEPDIR)/sc_battlemaster.Tpo" -c -o sc_battlemaster.lo `test -f 'cpp-scripts/serveus/sc_battlemaster.cpp' || echo '$(srcdir)/'`cpp-scripts/serveus/sc_battlemaster.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/sc_battlemaster.Tpo" "$(DEPDIR)/sc_battlemaster.Plo"; else rm -f "$(DEPDIR)/sc_battlemaster.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cpp-scripts/serveus/sc_battlemaster.cpp' object='sc_battlemaster.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sc_battlemaster.lo `test -f 'cpp-scripts/serveus/sc_battlemaster.cpp' || echo '$(srcdir)/'`cpp-scripts/serveus/sc_battlemaster.cpp

sc_guildmaster.lo: cpp-scripts/serveus/sc_guildmaster.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sc_guildmaster.lo -MD -MP -MF "$(DEPDIR)/sc_guildmaster.Tpo" -c -o sc_guildmaster.lo `test -f 'cpp-scripts/serveus/sc_guildmaster.cpp' || echo '$(srcdir)/'`cpp-scripts/serveus/sc_guildmaster.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/sc_guildmaster.Tpo" "$(DEPDIR)/sc_guildmaster.Plo"; else rm -f "$(DEPDIR)/sc_guildmaster.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cpp-scripts/serveus/sc_guildmaster.cpp' object='sc_guildmaster.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sc_guildmaster.lo `test -f 'cpp-scripts/serveus/sc_guildmaster.cpp' || echo '$(srcdir)/'`cpp-scripts/serveus/sc_guildmaster.cpp

sc_travelmaster.lo: cpp-scripts/serveus/sc_travelmaster.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sc_travelmaster.lo -MD -MP -MF "$(DEPDIR)/sc_travelmaster.Tpo" -c -o sc_travelmaster.lo `test -f 'cpp-scripts/serveus/sc_travelmaster.cpp' || echo '$(srcdir)/'`cpp-scripts/serveus/sc_travelmaster.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/sc_travelmaster.Tpo" "$(DEPDIR)/sc_travelmaster.Plo"; else rm -f "$(DEPDIR)/sc_travelmaster.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cpp-scripts/serveus/sc_travelmaster.cpp' object='sc_travelmaster.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sc_travelmaster.lo `test -f 'cpp-scripts/serveus/sc_travelmaster.cpp' || echo '$(srcdir)/'`cpp-scripts/serveus/sc_travelmaster.cpp

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(mkdir_p) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(LTLIBRARIES)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(libdir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am:

install-exec-am: install-libLTLIBRARIES

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-info-am uninstall-libLTLIBRARIES

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am check check-am \
	clean clean-generic clean-libLTLIBRARIES clean-libtool \
	clean-recursive ctags ctags-recursive distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-recursive distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-exec install-exec-am install-info \
	install-info-am install-libLTLIBRARIES install-man \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	maintainer-clean-recursive mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool mostlyclean-recursive \
	pdf pdf-am ps ps-am tags tags-recursive uninstall uninstall-am \
	uninstall-info-am uninstall-libLTLIBRARIES

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
